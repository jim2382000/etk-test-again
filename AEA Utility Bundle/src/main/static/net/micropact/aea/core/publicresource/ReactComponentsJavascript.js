/* public-resource */

"use strict";

window.AeaCoreReactComponents = (function(React) {

	const E = React.createElement

	function Instructions(props) {
		var instructions = props.instructions
		var children
		if (instructions instanceof Array) {
			children = instructions.map(function(instruction, i) {
				return E("p", {
					key: i
				}, instruction)
			})
		} else {
			children = instructions
		}

		return E("div", {
			className: "aea-core-instructions"
		},
			children)
	}

	function Application(props) {
		return E("div", null,
			E(Instructions, {
				instructions: props.instructions
			}),
			E("div", {
				className: "aea-core-mainContent"
			},
				props.children))
	}

	function Messages(props) {
		return props.messages.length > 0 && E("ul", {
			className: "aea-core-message " + props.className
		}, props.messages.map(function(message, i) {
			return E("li", {
				key: i
			},
				message)
		}))
	}

	function Errors(props) {
		return E(Messages, {
			messages: props.errors,
			className: "aea-core-error"
		})
	}

	function Successes(props) {
		return E(Messages, {
			messages: props.successes,
			className: "aea-core-success"
		})
	}

	function Loading() {
		return E("div", {
			className: "aea-core-loading"
		}, "Loading")
	}

	function CsrfToken(props) {
		var csrfToken = props.csrfToken

		return E("input", {
			type: "hidden",
			name: "csrfToken",
			value: csrfToken
		})
	}

	function Form(props) {
		const propsWithoutCsrfToken = {
			...props
		}
		delete propsWithoutCsrfToken.csrfToken

		return E("form", propsWithoutCsrfToken,
			E(CsrfToken, {
				csrfToken: props.csrfToken
			}),
			props.children)
	}

	function DataImport(props) {
		return E("div", null,
			E(Errors, {
				errors: props.errors
			}),
			E(Successes, {
				successes: props.importCompleted ? ["The file has been imported"] : []
			}),
			E(Form, {
				csrfToken: props.csrfToken,
				method: "POST",
				action: "page.request.do?page=" + props.importPageKey,
				encType: "multipart/form-data"
			},
				E(AeaStackForm.StackData, null,
					E(AeaStackForm.Hidden, {
						name: "update",
						value: "1"
					}),
					E(AeaStackForm.File, {
						name: "importFile",
						label: "File"
					}),
					E(AeaStackForm.Buttons, {
						buttons: [{
							type: "submit",
							name: "Import"
						}]
					})
				)))
	}

	function MakeRequiredIcon() {
		return E("img", {
			title: "Required",
			alt: "Required",
			src: "themes/default/web-pub/images/icons/required.gif",
			style: {
				height: "10px",
				width: "10px"
			}
		})
	}

	function ImportPage(props) {
		return E(Application, {
			title: props.componentName + " Data Import",
			instructions: ["This page is used to import data for the " + props.componentName + " component.",
			"It ingests a file which is generated by the page " + props.exportPageName + ".",
				"It is recommended that you backup your database before importing."
			],
		}, E(DataImport, props))
	}

	function SimpleHeaderTableGrid(props) {
		var headers = props.headers
		var caption = props.caption
		var className = props.className

		return E("table", {
			className: "grid" + (className ? " " + className : "")
		},
			caption ? E("caption", null, caption) : null,
			E("thead", null,
				E("tr", null,
					headers.map(function(header, i) {
						return E("th", {
							key: i
						}, header)
					}))),
			props.tbody)
	}

	return {
		Application: Application,
		Instructions: Instructions,
		Messages: Messages,
		Errors: Errors,
		Successes: Successes,
		Loading: Loading,
		MakeRequiredIcon: MakeRequiredIcon,
		CsrfToken: CsrfToken,
		Form: Form,

		SimpleHeaderTableGrid: SimpleHeaderTableGrid,

		ImportPage: ImportPage
	}
}(React))

/*
 * EXPERIMENTAL!!!!!!!
 * This will be a set of components meant to be similar to the entellitrak stack form
 * */
window.AeaStackForm = (function(React) {

	const E = React.createElement

	function Cell(props) {
		return E("div", null,
			props.item)
	}

	function Row(props) {
		return E("div", props,
			E(Cell, {
				item: Label({
					label: props.label
				})
			}),
			E(Cell, {
				item: props.element
			}))
	}

	function Label(props) {
		return E("label", null, props.label)
	}

	function FileInput(props) {
		return E("input", {
			type: "file",
			name: props.name,
			"aria-label": props.label
		})
	}

	function TextInput(props) {
		return E("input", {
			type: "text",
			name: props.name
		})
	}

	function HiddenInput(props) {
		return E("input", {
			type: "hidden",
			name: props.name,
			value: props.value
		})
	}

	function File(props) {
		return E(Row, {
			key: props.key,
			label: props.label,
			element: FileInput(props)
		})
	}

	function Text(props) {
		return E(Row, {
			key: props.key,
			label: props.label,
			element: TextInput(props)
		})
	}

	function Hidden(props) {
		return E(Row, {
			key: props.key,
			className: "aea-core-hidden",
			label: props.label,
			element: E(HiddenInput, props)
		})
	}

	function Buttons(props) {
		return E(Row, {
			key: props.key,
			element: E("div", null,
				props.buttons.map(function(buttonProps, i) {
					buttonProps.key = i
					return E("button", buttonProps, buttonProps.name)
				}))
		})
	}

	function StackData(props) {
		return E("div", {
			className: "aea-core-stackData"
		}, props.children)
	}

	return {
		StackData: StackData,
		Row: Row,
		Cell: Cell,
		Label: Label,

		FileInput: FileInput,
		TextInput: TextInput,
		HiddenInput: HiddenInput,

		File: File,
		Text: Text,
		Hidden: Hidden,
		Buttons: Buttons
	}
}(React))