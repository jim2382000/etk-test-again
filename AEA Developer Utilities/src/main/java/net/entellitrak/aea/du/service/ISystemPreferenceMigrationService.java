package net.entellitrak.aea.du.service;

import java.io.InputStream;
import java.util.Set;

import com.entellitrak.SystemPreferences;

/**
 * This interface describes classes which implement functionality related to moving System Preferences from one site to
 * another.
 *
 * @author zachary.miller
 */
public interface ISystemPreferenceMigrationService {

    /**
     * This method exports System Preference data to an input stream in the same format as the
     * DU - Page - System Preferences Tool page. This method can be used as part of an automated build script so that
     * the AE does not need to manually run the DU - Page - System Preferences Tool page each time a deployment
     * package must be built.
     *
     * @param preferencesToExport The set of preferences to export. The String to use for each preference can be
     *          obtained from the {@link SystemPreferences} class.
     * @return an input stream containing the System Preference data.
     *          The caller of this method is responsible for closing the stream.
     * @throws Exception If anything went wrong
     *
     * @see #importFromStream(InputStream)
     * @see SystemPreferences
     */
	// Suppress warning about throwing generic exception to maintain backwards compatibility.
	@SuppressWarnings("java:S112")
    InputStream exportToStream(Set<String> preferencesToExport) throws Exception;

    /**
     * Imports System Preferences into this system. It accepts a file as an input stream which has the format generated
     * by the System Preference Tool - Developer Utility.
     *
     * @param xmlPreferenceStream raw input stream data which is generated by the System Preferences export tool.
     *          This method currently does not close this stream.
     * @throws Exception If anything went wrong
     */
	// Suppress warning about throwing generic exception to maintain backwards compatibility.
	@SuppressWarnings("java:S112")
    void importFromStream(InputStream xmlPreferenceStream) throws Exception;
}
